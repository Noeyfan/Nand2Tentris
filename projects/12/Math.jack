// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
      var int i, shift;

      let twoToThe = Array.new(16);
      let i = 0;
      let shift = 1;
      while (i < 16) {
        let twoToThe[i] = shift;
        let shift = shift + shift;
        let i = i + 1;
      }

      return;
    }

    // helper
    function boolean bits(int x, int i) {
      return twoToThe[i] & x;
    }

    function boolean sign(int x, int y) {
      if ((x > 0) & (y > 0)) {
        return true;
      }

      if ((x < 0) & (y < 0)) {
        return true;
      }

      return false;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if (x < 0) {
        return -x;
      } else {
        return x;
      }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
      var int sum, shiftedX, i;
      let sum = 0;
      let shiftedX = x;

      let i = 0;
      while(i < 16) { // 16 bits
        if (Math.bits(y, i) = twoToThe[i]) {
          let sum = sum + shiftedX;
        }
        let shiftedX = shiftedX + shiftedX;
        let i = i + 1;
      }

      return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      var int q, result;
      var boolean sign;

      let sign = Math.sign(x, y);
      let x = Math.abs(x);
      let y = Math.abs(y);

      if ((y > x) | (y < 0)) {
        return 0;
      }

      let q = Math.divide(x, y + y);
      if ((x - (2 * q * y)) < y) {
        let result =  2 * q;
      } else {
        let result = (2 * q) + 1;
      }

      if (sign) {
        return result;
      } else {
        return -result;
      }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int y, i, q, qsq;

      let y = 0;
      let i = (16 / 2) - 1;

      while (i > -1) {
        let q = y + twoToThe[i];
        let qsq = q * q;
        if ((qsq > 0) & (qsq < x) | (qsq = x)) {
          let y = q;
        }

        let i = i - 1;
      }

      return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a > b) {
        return a;
      } else {
        return b;
      }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a < b) {
        return a;
      } else {
        return b;
      }
    }
}
